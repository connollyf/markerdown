{"version":3,"sources":["Output.jsx","Editor.jsx","App.jsx","index.js"],"names":["marked","require","sanitizeOptions","sanitize","sanitizer","SanitizeState","default","getSanitizer","Output","_this$props","this","props","className","markdown","react_default","a","createElement","dangerouslySetInnerHTML","parseMarkdown","__html","Component","initText","StylingButton","_ref","onClick","faiconStr","type","concat","Editor","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","textRef","React","createRef","state","value","handleChange","bind","assertThisInitialized","addText","bold","italic","link","hr","code","heading","event","setState","target","textBefore","textAfter","_this2","bi","current","selectionStart","ai","selectionEnd","newValue","slice","focus","newPos","length","setSelectionRange","n","header","i","_this3","source","output","id","role","aria-label","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onChange","ref","src_Output","App","splash","toggleOutput","toggleSource","toggleSplash","sourceBtnClasses","outputBtnClasses","splashClasses","_this$state","href","rel","data-target","aria-controls","src_Editor","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.68c33d43.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst marked = require('marked');\nconst SanitizeState = require('marked-sanitizer-github').default;\n\nconst state = new SanitizeState();\n\nconst sanitizeOptions = { sanitize: true, sanitizer: state.getSanitizer() };\n\nclass Output extends Component {\n    static parseMarkdown(markdown) {\n        return { __html: marked(markdown, sanitizeOptions) };\n    }\n\n    render() {\n        const { className, markdown } = this.props;\n        return (\n          <div\n            className={className}\n            dangerouslySetInnerHTML={Output.parseMarkdown(markdown)}\n            />\n        );\n    }\n}\n\nOutput.propTypes = {\n    className: PropTypes.string.isRequired,\n    markdown: PropTypes.string.isRequired,\n};\n\nexport default Output;\n","import React, { Component } from 'react';\nimport Output from './Output';\nimport PropTypes from 'prop-types';\n\nlet initText = `## Welcome to Markerdown\n---\nThis is an online editor for Markdown made using [React](https://www.reactjs.org) and [Marked](https://marked.js.org). It is completely responsive, try editing this text now!\n\nMarkdown is a readable mark up language. Try the\n\nYou can **bold text** or *italicize text* or ~~strike it through~~\n\nHeadings are created using hashtags, with more hashtags representing a smaller heading\n\n## like this heading\n#### or this smaller one\n\nand this is a horizontal rule\n\n---\n\nFor more info about markdown, try the toolbar above the source code or check out this [great guide](https://guides.github.com/features/mastering-markdown/) made by github.`;\n\nfunction StylingButton({ onClick, faiconStr }) {\n    return (\n      <button\n        type='button'\n        className='btn btn-secondary styling-btn btn-sm'\n        onClick={onClick}\n        >\n        <i className={`fas fa-${faiconStr}`} />\n      </button>\n    );\n}\nStylingButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    faiconStr: PropTypes.string.isRequired,\n};\n\nclass Editor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n\n        this.state = {\n            value: initText,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.addText = this.addText.bind(this);\n        this.bold = this.bold.bind(this);\n        this.italic = this.italic.bind(this);\n        this.link = this.link.bind(this);\n        this.hr = this.hr.bind(this);\n        this.code = this.code.bind(this);\n        this.heading = this.heading.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            value: event.target.value,\n        });\n    }\n\n    addText(textBefore, textAfter) {\n        const { value } = this.state;\n        const bi = this.textRef.current.selectionStart;\n        const ai = this.textRef.current.selectionEnd;\n        const newValue =\n            value.slice(0, bi) +\n            textBefore +\n            value.slice(bi, ai) +\n            textAfter +\n            value.slice(ai);\n        this.setState({ value: newValue }, () => {\n            this.textRef.current.focus();\n            const newPos = bi + textBefore.length;\n            this.textRef.current.setSelectionRange(newPos, newPos);\n        });\n    }\n\n    link() {\n        this.addText('[', ']()');\n    }\n\n    bold() {\n        this.addText('**', '**');\n    }\n\n    italic() {\n        this.addText('*', '*');\n    }\n\n    hr() {\n        this.addText('---\\n', '');\n    }\n\n    code() {\n        this.addText('`', '`');\n    }\n\n    heading(n) {\n        let header = '';\n        for (let i = 0; i < n; i += 1) {\n            header += '#';\n        }\n        header += ' ';\n        this.addText(header, '');\n    }\n\n    render() {\n        const { source, output } = this.props;\n        const { value } = this.state;\n        return (\n          <div className='editor'>\n            <div\n              className={\n                        source\n                            ? 'src-code-container'\n                            : 'src-code-container hidden'\n                    }\n                >\n              <div className='flex-container'>\n                <span id='src-code-label'>Source Code:</span>\n                <div\n                  className='btn-group btn-group-sm'\n                  role='group'\n                  aria-label='Editor functionality'\n                        >\n                  <StylingButton\n                    onClick={this.bold}\n                    faiconStr='bold'\n                            />\n                  <StylingButton\n                    onClick={this.bold}\n                    faiconStr='italic'\n                            />\n                  <StylingButton\n                    onClick={this.link}\n                    faiconStr='link'\n                            />\n                  <StylingButton\n                    onClick={this.hr}\n                    faiconStr='ruler-horizontal'\n                            />\n                  <StylingButton\n                    onClick={this.code}\n                    faiconStr='code'\n                            />\n                  <div className='btn-group' role='group'>\n                    <button\n                      id='btnGroupDrop1'\n                      type='button'\n                      className='btn btn-secondary btn-sm dropdown-toggle styling-btn'\n                      data-toggle='dropdown'\n                      aria-haspopup='true'\n                      aria-expanded='false'\n                                >\n                                    h\n                    </button>\n                    <div\n                      className='dropdown-menu'\n                      aria-labelledby='btnGroupDrop1'\n                                >\n                      <button\n                        className='btn btn-secondary btn-sm dropdown-item'\n                        type='button'\n                        onClick={() => this.heading(1)}\n                                    >\n                                        h1\n                      </button>\n                      <button\n                        className='btn btn-secondary btn-sm dropdown-item'\n                        type='button'\n                        onClick={() => this.heading(2)}\n                                    >\n                                        h2\n                      </button>\n                      <button\n                        className='btn btn-secondary btn-sm dropdown-item'\n                        type='button'\n                        onClick={() => this.heading(3)}\n                                    >\n                                        h3\n                      </button>\n                      <button\n                        className='btn btn-secondary btn-sm dropdown-item'\n                        type='button'\n                        onClick={() => this.heading(4)}\n                                    >\n                                        h4\n                      </button>\n                      <button\n                        className='btn btn-secondary btn-sm dropdown-item'\n                        type='button'\n                        onClick={() => this.heading(5)}\n                                    >\n                                        h5\n                      </button>\n                      <button\n                        className='btn btn-secondary btn-sm dropdown-item'\n                        type='button'\n                        onClick={() => this.heading(6)}\n                                    >\n                                        h6\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <textarea\n                id='src'\n                className='src-code'\n                value={value}\n                onChange={this.handleChange}\n                ref={this.textRef}\n                    />\n            </div>\n            <Output\n              markdown={value}\n              className={output ? 'output' : 'output hidden'}\n                />\n          </div>\n        );\n    }\n}\n\nEditor.propTypes = {\n    output: PropTypes.bool.isRequired,\n    source: PropTypes.bool.isRequired,\n};\n\nexport default Editor;\n","import React, { Component } from 'react';\nimport './App.min.css';\nimport Editor from './Editor';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            output: true,\n            source: true,\n            splash: true,\n        };\n        this.toggleOutput = this.toggleOutput.bind(this);\n        this.toggleSource = this.toggleSource.bind(this);\n        this.toggleSplash = this.toggleSplash.bind(this);\n    }\n\n    toggleOutput() {\n        const { output } = this.state;\n        this.setState({ output: !output });\n    }\n\n    toggleSource() {\n        const { source } = this.state;\n        this.setState({ source: !source });\n    }\n\n    toggleSplash() {\n        this.setState({ splash: false });\n    }\n\n    render() {\n        let sourceBtnClasses = 'btn btn-secondary btn-sm switcher-btn';\n        let outputBtnClasses = 'btn btn-secondary btn-sm switcher-btn';\n        let splashClasses = 'splash';\n        const { source, output, splash } = this.state;\n        if (!source) {\n            sourceBtnClasses += ' off';\n        }\n        if (!output) {\n            outputBtnClasses += ' off';\n        }\n\n        if (!splash) {\n            splashClasses += 'off splashHidden';\n        }\n\n        return (\n          <div className='App'>\n            <div className={splashClasses}>\n              <h1 className='splash-title'>Markerdown</h1>\n              <p>\n                        An online markdown editor built with{' '}\n                <a href='https://reactjs.org/' target='_blank' rel='noopener noreferrer'>\n                            React\n                </a>{' '}\n                        and{' '}\n                <a\n                  href='https://marked.js.org/#/README.md'\n                  target='_blank'\n                  rel='noopener noreferrer'\n                        >\n                            marked\n                </a>\n              </p>\n              <button\n                type='button'\n                className='btn enterButton'\n                onClick={this.toggleSplash}\n                    >\n                {' '}\n                <i className='fa fa-chevron-down' />{' '}\n              </button>\n            </div>\n            <nav className='nav navbar navbar-expand-md'>\n              <span className='navbar-brand'>\n                        Markerdown <i className='fa fa-pencil' />\n              </span>\n              <button\n                className='navbar-toggler'\n                type='button'\n                data-toggle='collapse'\n                data-target='#navbarNav'\n                aria-controls='navbarNav'\n                aria-expanded='false'\n                aria-label='Toggle navigation'\n                    >\n                <span className='navbar-toggler-icon' />\n              </button>\n              <div\n                className='btn-group'\n                role='group'\n                aria-label='Toggle output and source code visibility'\n                    >\n                <button\n                  type='button'\n                  className={sourceBtnClasses}\n                  onClick={this.toggleSource}\n                        >\n                            Source\n                </button>\n                <button\n                  type='button'\n                  className={outputBtnClasses}\n                  onClick={this.toggleOutput}\n                        >\n                            Compiled Markup\n                </button>\n              </div>\n              <div className='navbar-collapse collapse' id='navbarNav' />\n            </nav>\n            <Editor source={source} output={output} />\n          </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}